import { createResponder, ResponderType } from "#base";
import { createRow } from "@magicyan/discord";
import { EmbedBuilder, RoleSelectMenuBuilder } from "discord.js";
import { rowEmbedOptions } from "discord/components/buttons/embed-options.js";
import { selectTicketCategory } from "discord/components/selects/select-category.js";
import { selectChannel } from "discord/components/selects/select-channel.js";
import { emojis } from "discord/emojis/emojis_mentions";

createResponder({
    customId: "set-channel-button",
    types: [ResponderType.Button], cache: "cached",

    async run(interaction) {
        await interaction.reply({
            content: `${emojis.settings} | Defina qual ser√° o canal de texto respons√°vel pela abertura de tickets:`,
            components: [selectChannel],
            ephemeral: true 
        });
    }
});

createResponder({
    customId: "set-embed-button",
    types: [ResponderType.Button], cache: "cached",

    async run(interaction) {
        const embedConfig = new EmbedBuilder({
            title: "‚öô  | Configura√ß√£o - Embed",
            description: "Aqui voc√™ pode personalizar a embed respons√°vel pela abertura de tickets.\n\n**üìùOp√ß√µes dispon√≠veis:**\n- Title: Definir tit√∫lo\n- Description: Definir descri√ß√£o\n- Footer: Definir final\n- Image: Definir imagem/banner",
            footer: { text: "Escolha uma op√ß√£o"},
            color: 0x2b2d31
        });

        await interaction.reply({
            components: [rowEmbedOptions],
            embeds: [embedConfig],
            ephemeral: true 
        });
    }
});

createResponder({
    customId: "set-category-button",
    types: [ResponderType.Button], cache: "cached",

    async run(interaction) {
        await interaction.reply({
            content: `${emojis.settings} | Defina qual ser√° a categoria respons√°vel pelos canais/tickets abertos:`,
            components: [selectTicketCategory],
            ephemeral: true 
        });
    }
});

createResponder({
    customId: "set-staffrole-button",
    types: [ResponderType.Button], cache: "cached",

    async run(interaction) {
        const selectRole = createRow(
            new RoleSelectMenuBuilder({
                placeholder: "Defina o role de staff",
                customId: "selected-staff-role"
            }).setDefaultRoles()
        );

        await interaction.reply({ components: [selectRole], ephemeral: true, content: `${emojis.settings} | Defina qual ser√° o cargo respons√°vel pela staff:` });
    }
});